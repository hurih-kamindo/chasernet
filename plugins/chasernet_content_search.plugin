
sub nikto_content_search_init {
    use vars qw/$CONTENTSEARCH %CSMATCHED/;
    my $id = { name        => "content_search",
               full_name   => "Content Search",
               author      => "Sullo",
               description => "Search resultant content for interesting strings",
               hooks       => {
                          start => { method => \ chasernet_content_search_load,
                                     weight => 1,
                                     },
                          postfetch => { method => \ chasernet_content_search,
                                         weight => 20,
                                         },
                            },
               copyright => "2010 Chris Sullo"
               };

    return $id;
}

sub nikto_content_search_load {

    # Load up the database as soon as we can

    $CONTENTSEARCH = init_db("db_content_search");
    %CSMATCHED     = ();

    # to try and speed it up - precompile the regular expressions
    foreach my $testid (@$CONTENTSEARCH) {
        $testid->{'compiled'} = qr/$testid->{'matchstring'}/;
    }
}

sub chasernet_content_search {
    my ($mark, $parameters, $request, $response) = @_;

    my $body   = $response->{'whisker'}->{'data'};
    my @uri    = LW2::uri_split($response->{'whisker'}->{'uri'});
    my $file   = $uri[0];
    my $method = $response->{'whisker'}->{'method'} || "GET";

    foreach my $testid (@$CONTENTSEARCH) {
        # Check whether we've already matched it
        if (($CSMATCHED{ $mark->{'hostname'} }{$file} != 1) && ($body =~ $testid->{'compiled'})) {

            my $outmessage = "$file: $testid->{'message'}";
            add_vulnerability($mark, $outmessage, $testid->{'chasernet_id'}, $testid->{'osvdb'}, $method, $file, $request, $response);
            $CSMATCHED{ $mark->{'hostname'} }{$file} = 1;
        }
    }
    return $request, $response;
}

1;
